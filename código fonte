#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    char nome[50];
} Aluno;

void limparBuffer() {
    int c;
    while ((c = getchar()) != '\n' && c != EOF);
}

void inserirAluno(Aluno *lista, int *posicao) {
    if (*posicao < 100) {
        printf("Digite o nome do aluno:\n");

        char buffer[50];
        if (fgets(buffer, sizeof(buffer), stdin) != NULL) {
            buffer[strcspn(buffer, "\n")] = '\0'; // Remove o caractere de nova linha

            // Se a leitura não resultar em um número, assume que é o nome do aluno
            if (sscanf(buffer, "%d", posicao) != 1) {
                printf("Digite o nome do aluno:\n");
                strncpy(lista[*posicao].nome, buffer, sizeof(lista[*posicao].nome));
                (*posicao)++;
                printf("Aluno inserido com sucesso\n");
                return;
            }
        }

        printf("Erro ao inserir aluno. Tente novamente.\n");
    } else {
        printf("A lista de chamada esta cheia. Impossivel adicionar mais alunos\n");
    }
}
void listarAluno(Aluno *lista, int posicao) {
    if (posicao > 0) {
        printf("Lista de chamada:\n");
        for (int i = 1; i < posicao; i++) {
            printf("%d. %s\n", i, lista[i].nome);
        }
    } else {
        printf("A lista de chamada esta vazia\n");
    }
}

int main() {
    Aluno listaDeChamada[100];
    int tamanhoDaLista = 1;
    int escolha;

    do {
        printf("==================================\n");
        printf("MENU:\n");
        printf("1. Inserir um novo aluno\n");
        printf("2. Listar alunos\n");
        printf("3. Buscar aluno\n");
        printf("4. Editar aluno\n");
        printf("5. Remover aluno\n");
        printf("6. Realizar chamada\n");
        printf("7. Salvar chamada\n");
        printf("0. Finalizar\n");

        char buffer[50];
        if (fgets(buffer, sizeof(buffer), stdin) != NULL) {
            if (sscanf(buffer, "%d", &escolha) != 1) {
                limparBuffer();
                printf("Escolha invalida. Tente novamente.\n");
                continue;
            }
        } else {
            printf("Erro na leitura. Finalizando o programa.\n");
            return 1;
        }

        printf("==================================\n");

        switch (escolha) {
            case 1:
                inserirAluno(listaDeChamada, &tamanhoDaLista);
                break;
            case 2:
                listarAluno(listaDeChamada, tamanhoDaLista);
                break;
            case 3:
                // buscar_alunos();
                break;
            case 4:
                // editar_alunos();
                break;
            case 5:
                // remover_alunos();
                break;
            case 6:
                // chamada();
                break;
            case 7:
                // salvar();
                break;
            case 0:
                printf("Fim da execucao.\n");
                return 0;
            default:
                printf("Escolha invalida. Tente novamente.\n");
        }
    } while (1);

    return 0;
}
